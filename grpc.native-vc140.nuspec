<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>grpc.native-vc140</id>
    <version>1.0.1-preview1</version>
    <title>gRPC C++ (Visual C++ Platform v140)</title>
    <authors>google</authors>
    <owners>jozefizso</owners>
    <licenseUrl>https://github.com/grpc/grpc/raw/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/grpc/grpc</projectUrl>
    <iconUrl>https://github.com/goitsk/grpc.native-vc140/raw/master/assets/grpc_square_reverse_4x.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>In gRPC a client application can directly call methods on a server application on a different machine as if it was a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.

gRPC uses HTTP/2 for transport, Protocol Buffers as the interface description language, and provides features such as authentication, bidirectional streaming and flow control, blocking or nonblocking bindings, and cancellation and timeouts. It generates cross-platform client and server bindings for many languages.</description>
    <summary>gRPC is an open source remote procedure call (RPC) system developed by Google.</summary>
    <releaseNotes>### Release 1.0.0

Please see the notes for the previous releases here: https://github.com/grpc/grpc/releases. Also please see http://grpc.io/ for all information regarding this product.

This is the first GA (General Availability) release of gRPC, and can be considered ready for production. The API can now be considered stable. For the corresponding Java release, you can read their release notes, and grab the release here: https://github.com/grpc/grpc-java/releases/tag/v1.0.0

#### Cross language features:

* gRPC now uses protobuf-3.0.0 as released on https://github.com/google/protobuf/releases/tag/v3.0.0 - please visit that page for relevant release notes.


#### C-core:

* Performance boost using delayed writes.
* Added support for SO_REUSEPORT.
* New error propagation system.
* Default log verbosity is now ERROR.
* Various optimizations and fixes.
</releaseNotes>
    <copyright>Copyright 2015, Google Inc.  All rights reserved.</copyright>
    <tags>grpc server remote communication native cpp protobuf serialization nativepackage</tags>
  </metadata>
  <files>
    <file src="build\**\*.*" target="build" />
    <file src="assets\LICENSE.txt" target=".\" />
  </files>
</package>